[project]
name = "up-actual"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "actualpy~=0.8",
    "jsonschema~=4.0",
    "pre-commit~=4.0",
    "pydantic~=2.0",
    "structlog~=25.0",
]

[dependency-groups]
dev = [
    "pyright==1.1.390",
    "pytest~=8.0",
    "ruff~=0.8",
]

[tool.pyright]
include = ["up", "tests"]
strictListInference = true
strictDictionaryInference = true
strictParameterNoneValue = true
reportTypedDictNotRequiredAccess = false
reportIncompatibleVariableOverride = true
reportIncompatibleMethodOverride = true
reportMatchNotExhaustive = true
reportUnnecessaryTypeIgnoreComment = true

[tool.ruff]
src = ["up"]
line-length = 120
fix = true
show-fixes = true

[tool.ruff.lint]
# rules to enable/ignore
select = [
    "F",    # pyflakes
    "E",    # pycodestyle
    "W",    # pycodestyle
    "ANN",  # type annotations
    "N",    # pep8-naming
    "B",    # bugbear
    "I",    # isort
    "ARG",  # flake8-unused-arguments
    "SLF",  # flake8-self
    "UP",   # pyupgrade
    "PERF", # perflint
    "RUF",  # ruff-specific
    "SIM",  # flake8-simplify
    "S113", # request-without-timeout
    "FA",   # flake8-future-annotations (for python 3.7/8/9)
]
ignore = [
    "ANN204",
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.per-file-ignores]
# test functions don't need return types
"tests/*" = ["ANN201", "ANN202"]

[tool.ruff.lint.flake8-annotations]
# allow *args: Any, **kwargs: Any
allow-star-arg-any = true

[tool.pytest.ini_options]
markers = [
    "integration: marks tests as integration (deselect with '-m \"not integration\"')",
]
